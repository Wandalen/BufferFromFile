
submodule :

  NjsCppBasic : git+https:///github.com/Wandalen/wNjsCppBasic.git!master

  bufferfromfile :
    path : hd://.
    enabled : 0 # submodule
    criterion :
      development : 1
  wTools :
    path : npm:///wTools
    enabled : 0 # submodule
    criterion :
      development : 1
  wTesting :
    path : npm:///wTesting
    enabled : 0 # submodule
    criterion :
      development : 1
  wProcess :
    path : npm:///wprocess
    enabled : 0 # submodule
    criterion :
      development : 1
  willbe :
    path : npm:///willbe
    enabled : 0 # submodule
    criterion :
      development : 0
  node-gyp :
    path : npm:///node-gyp
    enabled : 0 # submodule
    criterion :
      development : 0
  node-pre-gyp :
    path : npm:///node-pre-gyp
    enabled : 0 # submodule
    criterion :
      development : 0
  node-pre-gyp-github :
    path : npm:///node-pre-gyp-github
    enabled : 0 # submodule
    criterion :
      development : 1
  eslint :
    path : npm:///eslint
    enabled : 0 # submodule
    criterion :
      development : 1

path :

  in : '.'
  out : 'out'
  temp :
    - '{path::out}/cpp'
    - '{path::build}'
    - 'package-lock.json'
    - 'node_modules'
    - 'build'
    - 'binding'
  proto : './js'
  export : '{path::proto}/**'
  doc : './doc'
  js : 'js'
  cpp : 'cpp'
  build : 'build'
  binding : 'binding'
  step : 'step'
  node-pre-gyp : node_modules/node-pre-gyp/bin/node-pre-gyp

  out.raw.debug :
    path : '{path::out}/debug'
    criterion :
      debug : debug
      raw : raw
      content : prime
  out.compiled.debug :
    path : '{path::out}/compiled.debug'
    criterion :
      debug : debug
      raw : compiled
      content : prime
  out.raw.release :
    path : '{path::out}/raw.release'
    criterion :
      debug : release
      raw : raw
      content : prime
  out.compiled.release :
    path : '{path::out}/release'
    criterion :
      debug : release
      raw : compiled
      content : prime

  entry.proto.no.tests :
    path : js/Main.ss
    criterion :
      tests : 'no.tests'
  entry.proto.only.tests :
    path : proto/**/*.test.s
    criterion :
      tests : 'only.tests'

  # npm.entry : proto/wtools/abase/Layer2.s
  # npm.files : proto

  entry.out.raw.debug :
    path : '{path::out.*=1}/source/Main.ss'
    criterion :
      debug : [ debug, release ]
      raw : raw
      content : prime
  entry.out.compiled.debug :
    path : '{path::out.*=}/source/Index.s'
    criterion :
      debug : [ debug, release ]
      raw : compiled
      content : prime

reflector :

  reflect.proto :
    inherit : predefined.*
    criterion :
      tests : 'no.tests'
      debug : [ debug, release ]
      raw : [ raw, compiled ]
      content : prime
    filePath :
      path::proto : '{path::out.*=1}/source'

  reflect.cpp :
    inherit : predefined.*
    filePath :
      path::cpp : '{path::out}/cpp'

  reflect.common :
    inherit : submodule::NjsCppBasic/exported::cpp.export/reflector::exported.files.cpp.export
    dst : '{path::out}/cpp'

  transpile.proto.raw :
    inherit : predefined.*
    step :
      inherit : files.transpile
      entry : path::entry.proto.no.tests
    criterion :
      raw : raw
      debug : release
      content : prime
    filePath :
      path::proto : '{path::out.raw.release}'

  transpile.proto.no.tests.compiled :
    inherit : predefined.*
    step :
      inherit : files.transpile
      entry : path::entry.proto.*=1
    criterion :
      tests : 'no.tests'
      raw : compiled
      debug : [ debug, release ]
      content : prime
    filePath :
      '**.test*' : 0
      '**.test/**' : 0
      path::proto : '{path::out.*=1}/Main.s'

  transpile.proto.only.tests.compiled :
    inherit : predefined.*
    step :
      inherit : files.transpile
      entry : path::entry.proto.*=1
      external.before : '{path::out.*=1}/Main.s'
    criterion :
      tests : 'only.tests'
      raw : compiled
      debug : [ debug, release ]
      content : prime
    filePath :
      '**.test*' : 1
      path::proto : '{path::out.*=1}/Tests.test.s'

step :

  npm.generate :
    inherit : npm.generate
    entryPath : path::entry.out.*=1
    packagePath : '{path::out.*=1}/package.json'
    filesPath : '{path::out.*=1}/source/**'
    criterion :
      debug : [ debug, release ]
      raw : [ raw, compiled ]

  clean.out.cpp :
    inherit : files.delete
    filePath : '{path::out}/cpp'

  clean.out.npm :
    inherit : files.delete
    filePath : path::out.*=1
    criterion :
      debug : debug
      raw : compiled
      tests : no.tests
      content : npm

  clean.build.and.binding :
    inherit : files.delete
    filePath :
      - '{path::build}'
      - '{path::binding}'

  tst.proto :
    shell : 'tst {path::proto}'
    criterion :
      content : proto

  tst.debug :
    shell : 'tst {path::out.*=1}'
    criterion :
      content : prime
      debug : debug

  tst.release :
    shell : 'tst {path::out.*=1}'
    criterion :
      content : prime
      debug : release

  node-gyp.build :
    currentPath : path::in
    shell : "node {path::node-pre-gyp} configure && node {path::node-pre-gyp} rebuild"

  node-gyp.install :
    currentPath : path::in
    shell : 'npm run-script node-pre-gyp-install'

  postinstall :
    currentPath : path::step
    shell : 'node Install.ss'

build :

  debug :
    criterion :
      default : 1
    steps :
      - clean.build.and.binding
      - submodules.update
      - node-gyp.build

  install :
    steps :
      - submodules.update
      - postinstall

  compiled.debug :
    criterion :
      debug : debug
      raw : compiled
      content : prime
    steps :
      - step::clean.out*=2
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1

  raw.release :
    criterion :
      debug : release
      raw : raw
      content : prime
    steps :
      - step::clean.out*=2
      - transpile.proto.raw

  release :
    criterion :
      debug : release
      raw : compiled
      content : prime
    steps :
      - step::clean.out*=2
      - transpile.proto.no.tests*=1
      - transpile.proto.only.tests*=1

  npm :
    criterion :
      debug : debug
      raw : raw
      content : npm
    steps :
      - npm.generate.*=1
      # - npm.generate

  all :
    steps :
      - build::debug
      - build::compiled.debug
      - build::raw.release
      - build::release
      - build::npm
